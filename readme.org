Work in progress python application for modelling enzyme kinetics, taking into
account allosteric effects, obeying the laws of thermodynamics and synthesising
information/uncertainty from both steady state experiments and the existing
literature.

* Requirements
- Python 3.7
- A C++ toolchain

* Python dependencies
See [[https://github.com/biosustain/enzymeKAT/blob/master/setup.cfg][setup.cfg]].

* Installation
First create a fresh Python 3.7 virtual environment and then activate it:

#+begin_src bash
sudo pip3.7 install virtualenv          # if virtualenv isn't installed already
python3.7 -m virtualenv maud_venv  # choose any name you like!
source maud_venv/bin/activate
#+end_src

Run this command to install Maud and its python dependencies:

#+begin_src bash
pip install -e git+ssh://git@github.com/biosustain/Maud.git#egg=maud
#+end_src

This step requires that you have ssh access to the Maud github repository
This is unavoidable while the repository remains private, but should be
achievable if you can see this readme.

Cmdstanpy depends on [[https://github.com/stan-dev/cmdstan][cmdstan]], which needs to be installed too. Fortunately,
cmdstanpy comes with a command line script that installs cmdstan, so this step
is pretty simple:

#+begin_src bash
install_cmdstan
#+end_src

* Usage
To run the simple linear model, use the following command:

#+begin_src bash
maud sample
#+end_src

This will use the data file at ~data/in/linar.toml~ to create a Stan program at
~maud/stan_code/autogen/inference_model_linear.stan~, compile it into a
C++ Stan model, draw samples from the resulting posterior and store them in
files starting with ~data/out/model_output_linear~.

The ~sample~ command can be configured in a few ways - to check out all the
options try running

#+begin_src bash
maud sample --help
#+end_src

* Model
The main task that Maud addresses is to calculate expectations of a
probability distribution over possible configurations of kinetic parameters
that govern a reaction system. This distribution must be thermodynamically
consistent - i.e. regions of parameter space that break the laws of
thermodynamics must have zero probability mass - and also reflect the
pre-experimental and experimental information.

Maud specifies the probability density of any configuration of kinetic
parameters as a function of available information using Stan programs
(e.g.[[https://github.com/biosustain/Maud/blob/master/maud/stan_code/inference_model_yeast.stan][inference_model_yeast.stan]]). Pre-experimental information is represented
as prior probability distributions over variables representing kinetic
parameters. Experimental information is represented by a regression model, with
observed measurements treated as randomly distributed from true values of the
measured quantities with known error scale. Parameter configurations are mapped
to true quantity values by solving a system of ordinary differential equations.

Thermodynamic consistency will be (this is not the case at present) ensured by
relating kinetic parameters to thermodynamic quantities through [[http://what-when-how.com/molecular-biology/haldane-relationship-molecular-biology/][Haldane
relationships]]. For each reaction, an informative prior must be specified for
Gibbs Free energy \Delta G and temperature T, and these thermodynamic
quantities are related to kinetic parameters using the following equation

\Delta G = -RT\ln K_{eq}


where $R$ is a known physical constant and K_{eq} is a ratio of kinetic
parameters.

